{
    "docs": [
        {
            "location": "/", 
            "text": "Base91\n\n\n\n\nDevelopment halted\n\n\nThis component is no longer being actively developed, though bugs will be fixed if reported.\n\n\n\n\nA core component, which base91 encodes the payload, you do not need to include it as its included with core.\n\n\nInstall\n\n\nRequire this package with composer using the following command:\n\n\n$ composer require plinker/asterisk\n\n\n\n\n\nClient\n\n\nCreating a client instance is done as follows:\n\n\n?php\n\n\nrequire\n \nvendor/autoload.php\n;\n\n\n\n/**\n\n\n * Initialize plinker client.\n\n\n *\n\n\n * @param string $server - URL to server listener.\n\n\n * @param string $config - server secret, and/or a additional component data\n\n\n */\n\n\n$client\n \n=\n \nnew\n \n\\Plinker\\Core\\Client\n(\n\n    \nhttp://example.com/server.php\n,\n\n    \n[\n\n        \nsecret\n \n=\n \na secret password\n,\n\n        \ndatabase\n \n=\n \n[\n\n            \ndsn\n \n=\n \nmysql:host=127.0.0.1;dbname=asterisk\n,\n\n            \nusername\n \n=\n \n,\n\n            \npassword\n \n=\n \n,\n\n            \ndatabase\n \n=\n \n,\n\n            \nfreeze\n \n=\n \nfalse\n,\n\n            \ndebug\n \n=\n \nfalse\n\n        \n],\n\n        \nami\n \n=\n \n[\n\n            \nserver\n \n=\n \n127.0.0.1\n,\n\n            \nport\n \n=\n \n5038\n,\n\n            \nusername\n \n=\n \n,\n\n            \npassword\n \n=\n \n\n        \n]\n\n    \n]\n\n\n);\n\n\n\n// or using global function\n\n\n$client\n \n=\n \nplinker_client\n(\nhttp://example.com/server.php\n,\n \na secret password\n,\n \n[\n\n    \ndatabase\n \n=\n \n[\n\n        \ndsn\n \n=\n \nmysql:host=127.0.0.1;dbname=asterisk\n,\n\n        \nusername\n \n=\n \n,\n\n        \npassword\n \n=\n \n,\n\n        \ndatabase\n \n=\n \n,\n\n        \nfreeze\n \n=\n \nfalse\n,\n\n        \ndebug\n \n=\n \nfalse\n\n    \n],\n\n    \nami\n \n=\n \n[\n\n        \nserver\n \n=\n \n127.0.0.1\n,\n\n        \nport\n \n=\n \n5038\n,\n\n        \nusername\n \n=\n \n,\n\n        \npassword\n \n=\n \n\n    \n]\n\n\n]);\n\n\n\n\n\n\nMethods\n\n\nOnce setup, you call the class though its namespace to its method.\n\n\nCommand\n\n\nExecute ASM command.\n\n\nCall\n\n\n$result = $client-\nasterisk-\ncommand(\nsip show peers\n);\n\n\n\n\n\nResponse\n\n\n\n\n\n\n\n\nGet Queue\n\n\nConnect into AMI and issue asterisk command [queue show *].\n\n\nCall\n\n\n$result = $client-\nasterisk-\ngetQueue(\nfoo\n);\n\n\n\n\n\nResponse\n\n\n\n\n\n\n\n\nShow Channels\n\n\nConnect into AMI and issue asterisk command [core show channels].\n\n\nCall\n\n\n$result = $client-\nasterisk-\ncoreShowChannels();\n\n\n\n\n\nResponse\n\n\nArray\n(\n    \nactive_channels\n =\n 0,\n    \nactive_calls\n =\n 0,\n    \ncalls_processed\n =\n 0\n}\n\n\n\n\n\nAnd other methods see: \nvendor/asterisk/src/Asterisk.php\n\n\nTesting\n\n\nThere are no tests setup for this component.\n\n\nContributing\n\n\nPlease see \nCONTRIBUTING\n for details.\n\n\nSecurity\n\n\nIf you discover any security related issues, please contact me via \nhttps://cherone.co.uk\n instead of using the issue tracker.\n\n\nCredits\n\n\n\n\nLawrence Cherone\n\n\nAll Contributors\n\n\n\n\nDevelopment Encouragement\n\n\nIf you use this project and make money from it or want to show your appreciation,\nplease feel free to make a donation \nhttps://www.paypal.me/lcherone\n, thanks.\n\n\nSponsors\n\n\nGet your company or name listed throughout the documentation and on each github repository, contact me at \nhttps://cherone.co.uk\n for further details.\n\n\nLicense\n\n\nThe MIT License (MIT). Please see \nLicense File\n for more information.\n\n\nSee \norganisations page\n for additional components.", 
            "title": "Base91"
        }, 
        {
            "location": "/#base91", 
            "text": "Development halted  This component is no longer being actively developed, though bugs will be fixed if reported.   A core component, which base91 encodes the payload, you do not need to include it as its included with core.", 
            "title": "Base91"
        }, 
        {
            "location": "/#install", 
            "text": "Require this package with composer using the following command:  $ composer require plinker/asterisk", 
            "title": "Install"
        }, 
        {
            "location": "/#client", 
            "text": "Creating a client instance is done as follows:  ?php  require   vendor/autoload.php ;  /**   * Initialize plinker client.   *   * @param string $server - URL to server listener.   * @param string $config - server secret, and/or a additional component data   */  $client   =   new   \\Plinker\\Core\\Client ( \n     http://example.com/server.php , \n     [ \n         secret   =   a secret password , \n         database   =   [ \n             dsn   =   mysql:host=127.0.0.1;dbname=asterisk , \n             username   =   , \n             password   =   , \n             database   =   , \n             freeze   =   false , \n             debug   =   false \n         ], \n         ami   =   [ \n             server   =   127.0.0.1 , \n             port   =   5038 , \n             username   =   , \n             password   =   \n         ] \n     ]  );  // or using global function  $client   =   plinker_client ( http://example.com/server.php ,   a secret password ,   [ \n     database   =   [ \n         dsn   =   mysql:host=127.0.0.1;dbname=asterisk , \n         username   =   , \n         password   =   , \n         database   =   , \n         freeze   =   false , \n         debug   =   false \n     ], \n     ami   =   [ \n         server   =   127.0.0.1 , \n         port   =   5038 , \n         username   =   , \n         password   =   \n     ]  ]);", 
            "title": "Client"
        }, 
        {
            "location": "/#methods", 
            "text": "Once setup, you call the class though its namespace to its method.", 
            "title": "Methods"
        }, 
        {
            "location": "/#command", 
            "text": "Execute ASM command.  Call  $result = $client- asterisk- command( sip show peers );  Response", 
            "title": "Command"
        }, 
        {
            "location": "/#get-queue", 
            "text": "Connect into AMI and issue asterisk command [queue show *].  Call  $result = $client- asterisk- getQueue( foo );  Response", 
            "title": "Get Queue"
        }, 
        {
            "location": "/#show-channels", 
            "text": "Connect into AMI and issue asterisk command [core show channels].  Call  $result = $client- asterisk- coreShowChannels();  Response  Array\n(\n     active_channels  =  0,\n     active_calls  =  0,\n     calls_processed  =  0\n}  And other methods see:  vendor/asterisk/src/Asterisk.php", 
            "title": "Show Channels"
        }, 
        {
            "location": "/#testing", 
            "text": "There are no tests setup for this component.", 
            "title": "Testing"
        }, 
        {
            "location": "/#contributing", 
            "text": "Please see  CONTRIBUTING  for details.", 
            "title": "Contributing"
        }, 
        {
            "location": "/#security", 
            "text": "If you discover any security related issues, please contact me via  https://cherone.co.uk  instead of using the issue tracker.", 
            "title": "Security"
        }, 
        {
            "location": "/#credits", 
            "text": "Lawrence Cherone  All Contributors", 
            "title": "Credits"
        }, 
        {
            "location": "/#development-encouragement", 
            "text": "If you use this project and make money from it or want to show your appreciation,\nplease feel free to make a donation  https://www.paypal.me/lcherone , thanks.", 
            "title": "Development Encouragement"
        }, 
        {
            "location": "/#sponsors", 
            "text": "Get your company or name listed throughout the documentation and on each github repository, contact me at  https://cherone.co.uk  for further details.", 
            "title": "Sponsors"
        }, 
        {
            "location": "/#license", 
            "text": "The MIT License (MIT). Please see  License File  for more information.  See  organisations page  for additional components.", 
            "title": "License"
        }
    ]
}